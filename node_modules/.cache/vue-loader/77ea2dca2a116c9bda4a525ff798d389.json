{"remainingRequest":"/home/anasr/Projects/VueJSProject/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/anasr/Projects/VueJSProject/src/components/RoomsWindowsList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/anasr/Projects/VueJSProject/src/components/RoomsWindowsList.vue","mtime":1610641770730},{"path":"/home/anasr/Projects/VueJSProject/node_modules/cache-loader/dist/cjs.js","mtime":1610638898750},{"path":"/home/anasr/Projects/VueJSProject/node_modules/babel-loader/lib/index.js","mtime":1610638898710},{"path":"/home/anasr/Projects/VueJSProject/node_modules/cache-loader/dist/cjs.js","mtime":1610638898750},{"path":"/home/anasr/Projects/VueJSProject/node_modules/vue-loader/lib/index.js","mtime":1610638899960}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCB7QVBJX0hPU1R9IGZyb20gJy4uL2NvbmZpZyc7CmltcG9ydCBXaW5kb3dzTGlzdEl0ZW0gZnJvbSAnLi9XaW5kb3dzTGlzdEl0ZW0nOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdSb29tc0xpc3RJdGVtJywKICBwcm9wczogWyd3aW5kb3dzJywicm9vbUlkIl0sCiAgY29tcG9uZW50czogewogICAgV2luZG93c0xpc3RJdGVtCiAgfSwKICBkYXRhOiBmdW5jdGlvbigpIHsKICAgIHJldHVybiB7CiAgICAgIGlzRXhwYW5kZWQ6IGZhbHNlLAogICAgICB3aW5kb3dzQXJlU3dpdGNoaW5nIDogZmFsc2UKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHRvZ2dsZUV4cGFuZCgpIHsKICAgICAgdGhpcy5pc0V4cGFuZGVkID0gIXRoaXMuaXNFeHBhbmRlZDsKICAgIH0sCiAgICBhc3luYyBzd2l0Y2hBbGxXaW5kb3dzKCkgewogICAgICB0aGlzLndpbmRvd3NBcmVTd2l0Y2hpbmcgPSB0cnVlOwogICAgICBhd2FpdCBheGlvcy5wdXQoYCR7QVBJX0hPU1R9L2FwaS9yb29tcy8ke3RoaXMucm9vbUlkfS9zd2l0Y2hXaW5kb3dgKTsKICAgICAgZm9yKGxldCBpID0gMDsgaSA8IHRoaXMud2luZG93cy5sZW5ndGg7IGkrKykgewogICAgICAgIHRoaXMud2luZG93c1tpXS53aW5kb3dTdGF0dXMgPSB0aGlzLndpbmRvd3NbaV0ud2luZG93U3RhdHVzPT09J09QRU4nID8gJ0NMT1NFRCcgOiAnT1BFTic7CiAgICAgIH0KICAgICAgdGhpcy53aW5kb3dzQXJlU3dpdGNoaW5nID0gZmFsc2U7CiAgICB9LAogICAgdXBkYXRlV2luZG93KG5ld1dpbmRvdykgewogICAgICAvKiBGaW5kIHRoZSBwbGFjZSBvZiB3aW5kb3cgb2JqZWN0dyBpdGggdGhlIHNhbWUgSWQgaW4gdGhlIGFycmF5LCBhbmQgcmVwbGFjZSBpdCAqLwogICAgICBsZXQgaW5kZXggPSB0aGlzLndpbmRvd3MuZmluZEluZGV4KHdpbmRvdyA9PiB3aW5kb3cuaWQgPT09IG5ld1dpbmRvdy5pZCk7CiAgICAgIHRoaXMud2luZG93cy5zcGxpY2UoaW5kZXgsIDEsIG5ld1dpbmRvdyk7CiAgICB9LAogIH0KfQo="},{"version":3,"sources":["RoomsWindowsList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"RoomsWindowsList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"room border border-secondary rounded p-2 mb-2\" :class=\"{expanded: isExpanded}\">\n    <div class=\"top-row d-flex align-items-center\" @click=\"toggleExpand\">\n      <div class=\"room-name fw-bold pe-3\">Windows</div>\n\n      <button type=\"button\" \n          class=\"btn btn-primary ms-auto me-4 btn-sm\" \n          :class=\"{disabled: windowsAreSwitching}\"\n          @click.stop=\"switchAllWindows\" > Switch all windows</button>\n\n      <div class=\"expand-button\">\n        {{ isExpanded ? '&#9660;' : '&#9658;' }}\n      </div>\n    </div>\n\n    <template v-if=\"isExpanded\">\n      <hr/>\n       <div class=\"windows-list pt-3 d-flex flex-column\">\n          <windows-list-item \n            v-for=\"window in windows\"\n            :window=\"window\"\n            :key=\"window.id\"\n            @window-updated=\"updateWindow\"\n          >\n          </windows-list-item>\n  </div>\n    </template>\n\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport {API_HOST} from '../config';\nimport WindowsListItem from './WindowsListItem';\n\nexport default {\n  name: 'RoomsListItem',\n  props: ['windows',\"roomId\"],\n  components: {\n    WindowsListItem\n  },\n  data: function() {\n    return {\n      isExpanded: false,\n      windowsAreSwitching : false\n    }\n  },\n  methods: {\n    toggleExpand() {\n      this.isExpanded = !this.isExpanded;\n    },\n    async switchAllWindows() {\n      this.windowsAreSwitching = true;\n      await axios.put(`${API_HOST}/api/rooms/${this.roomId}/switchWindow`);\n      for(let i = 0; i < this.windows.length; i++) {\n        this.windows[i].windowStatus = this.windows[i].windowStatus==='OPEN' ? 'CLOSED' : 'OPEN';\n      }\n      this.windowsAreSwitching = false;\n    },\n    updateWindow(newWindow) {\n      /* Find the place of window objectw ith the same Id in the array, and replace it */\n      let index = this.windows.findIndex(window => window.id === newWindow.id);\n      this.windows.splice(index, 1, newWindow);\n    },\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n.open-status {\n  .icon {\n    position: relative;\n  }\n\n  &.open {\n    color: #198754;\n    .icon {\n      font-size: 12px;\n      top: -3px;\n    }\n  }\n\n  &.closed {\n    color: #dc3545;\n  }\n}\n\n.room {\n  .top-row {\n    cursor: pointer;\n  }\n}\n\n.sub-title {\n  margin: 15px;\n}\n\n.rooms-list {\n  height: 500px;\n  overflow-y: scroll;\n}\n</style>\n"]}]}