{"remainingRequest":"/home/anasr/Projects/VueJSProject/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/anasr/Projects/VueJSProject/src/components/WindowsList.vue?vue&type=style&index=0&id=35fd797e&scoped=true&lang=css&","dependencies":[{"path":"/home/anasr/Projects/VueJSProject/src/components/WindowsList.vue","mtime":1610641953720},{"path":"/home/anasr/Projects/VueJSProject/node_modules/css-loader/dist/cjs.js","mtime":1610638898960},{"path":"/home/anasr/Projects/VueJSProject/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1610638899960},{"path":"/home/anasr/Projects/VueJSProject/node_modules/postcss-loader/src/index.js","mtime":1610638899370},{"path":"/home/anasr/Projects/VueJSProject/node_modules/cache-loader/dist/cjs.js","mtime":1610638898750},{"path":"/home/anasr/Projects/VueJSProject/node_modules/vue-loader/lib/index.js","mtime":1610638899960}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLndpbmRvd3MtbGlzdCB7CiAgaGVpZ2h0OiA1MDBweDsKICBvdmVyZmxvdy15OiBzY3JvbGw7Cn0K"},{"version":3,"sources":["WindowsList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AACA;AACA;AACA","file":"WindowsList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"windows-list pt-3\">\n    <windows-list-item \n      v-for=\"window in windows\"\n      :window=\"window\"\n      :key=\"window.id\"  \n      @window-updated=\"updateWindow\"\n    >\n    </windows-list-item>\n  </div>\n</template>\n\n\n<script>\nimport axios from 'axios';\nimport {API_HOST} from '../config';\nimport WindowsListItem from './WindowsListItem';\n\nexport default {\n  components: {\n    WindowsListItem\n  },\n  name: 'WindowsList',\n  data: function() {\n    return {\n      /* Initialize windows with an empty array, while waiting for actual data to be retrieved from the API */\n      windows: []\n    }\n  },\n  created: async function() {\n    let response = await axios.get(`${API_HOST}/api/windows`);\n    let windows = response.data;\n    this.windows = windows;\n  },\n  methods: {\n    updateWindow(newWindow) {\n      /* Find the place of window objectw ith the same Id in the array, and replace it */\n      let index = this.windows.findIndex(window => window.id === newWindow.id);\n      this.windows.splice(index, 1, newWindow);\n    }\n  }\n}\n</script>\n\n<style scoped>\n.windows-list {\n  height: 500px;\n  overflow-y: scroll;\n}\n</style>"]}]}