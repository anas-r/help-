{"remainingRequest":"/home/anasr/Projects/VueJSProject/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/anasr/Projects/VueJSProject/src/components/WindowsListItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/anasr/Projects/VueJSProject/src/components/WindowsListItem.vue","mtime":1610644967890},{"path":"/home/anasr/Projects/VueJSProject/node_modules/cache-loader/dist/cjs.js","mtime":1610638898750},{"path":"/home/anasr/Projects/VueJSProject/node_modules/babel-loader/lib/index.js","mtime":1610638898710},{"path":"/home/anasr/Projects/VueJSProject/node_modules/cache-loader/dist/cjs.js","mtime":1610638898750},{"path":"/home/anasr/Projects/VueJSProject/node_modules/vue-loader/lib/index.js","mtime":1610638899960}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCB7QVBJX0hPU1R9IGZyb20gJy4uL2NvbmZpZyc7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1dpbmRvd3NMaXN0SXRlbScsCiAgcHJvcHM6IFsnd2luZG93J10sCiAgZGF0YTogZnVuY3Rpb24oKSB7CiAgICByZXR1cm4gewogICAgICBpc0V4cGFuZGVkOiBmYWxzZQogICAgfQogIH0sIAogIGNvbXB1dGVkOiB7CiAgICBpc1dpbmRvd09wZW46IGZ1bmN0aW9uKCkgewogICAgICByZXR1cm4gdGhpcy53aW5kb3cud2luZG93U3RhdHVzID09PSAnT1BFTic7IAogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgdG9nZ2xlRXhwYW5kKCkgewogICAgICB0aGlzLmlzRXhwYW5kZWQgPSAhdGhpcy5pc0V4cGFuZGVkOwogICAgfSwKICAgIGFzeW5jIHN3aXRjaFdpbmRvdygpIHsKICAgICAgbGV0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MucHV0KGAke0FQSV9IT1NUfS9hcGkvd2luZG93cy8ke3RoaXMud2luZG93LmlkfS9zd2l0Y2hgKTsKICAgICAgbGV0IHVwZGF0ZWRXaW5kb3cgPSByZXNwb25zZS5kYXRhOwogICAgICB0aGlzLiRlbWl0KCd3aW5kb3ctdXBkYXRlZCcsIHVwZGF0ZWRXaW5kb3cpOwogICAgCiAgICB9LAogICAgYXN5bmMgZGVsZXRlV2luZG93KCkgewogICAgICBsZXQgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5kZWxldGUoYCR7QVBJX0hPU1R9L2FwaS93aW5kb3dzLyR7dGhpcy53aW5kb3cuaWR9YCk7CiAgICAgIGxldCB1cGRhdGVkV2luZG93ID0gcmVzcG9uc2UuZGF0YTsKICAgICAgdGhpcy4kZW1pdCgnd2luZG93LXVwZGF0ZWQnLCB1cGRhdGVkV2luZG93KTsKICAgICAgd2luZG93LmxvY2F0aW9uID0gd2luZG93LmxvY2F0aW9uOwogICAgfQogIH0KfQo="},{"version":3,"sources":["WindowsListItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"WindowsListItem.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"window border border-secondary rounded p-2 mb-2\" :class=\"{expanded: isExpanded}\">\n    <div class=\"top-row d-flex\" @click=\"toggleExpand\">\n      <div class=\"window-name fw-bold pe-3\">{{window.name}}</div>\n      <div class=\"room-name text-muted\">{{window.roomName}}</div>\n\n      <div class=\"open-status ms-4\" :class=\"{open: isWindowOpen, closed: !isWindowOpen}\">\n        <template v-if=\"isWindowOpen\">\n          <span class=\"icon\">&#x2B24;</span> Open\n        </template>\n        <template v-else>\n          <span class=\"icon\">&#x2716;</span> Closed\n        </template>\n      </div>\n\n      <div class=\"expand-button ms-auto\">\n        {{ isExpanded ? '&#9660;' : '&#9658;' }}\n      </div>\n    </div>\n    <template v-if=\"isExpanded\">\n      <hr/>\n      <div class=\"details d-flex\">\n        <button type=\"button\" class=\"btn btn-secondary me-2\" @click=\"switchWindow\">{{ isWindowOpen ? 'Close' : 'Open' }} window</button>\n        <button type=\"button\" class=\"btn btn-danger\"@click=\"deleteWindow\">Delete window</button>\n      </div>\n    </template>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport {API_HOST} from '../config';\n\nexport default {\n  name: 'WindowsListItem',\n  props: ['window'],\n  data: function() {\n    return {\n      isExpanded: false\n    }\n  }, \n  computed: {\n    isWindowOpen: function() {\n      return this.window.windowStatus === 'OPEN'; \n    }\n  },\n  methods: {\n    toggleExpand() {\n      this.isExpanded = !this.isExpanded;\n    },\n    async switchWindow() {\n      let response = await axios.put(`${API_HOST}/api/windows/${this.window.id}/switch`);\n      let updatedWindow = response.data;\n      this.$emit('window-updated', updatedWindow);\n    \n    },\n    async deleteWindow() {\n      let response = await axios.delete(`${API_HOST}/api/windows/${this.window.id}`);\n      let updatedWindow = response.data;\n      this.$emit('window-updated', updatedWindow);\n      window.location = window.location;\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n.open-status {\n  .icon {\n    position: relative;\n  }\n\n  &.open {\n    color: #198754;\n    .icon {\n      font-size: 12px;\n      top: -3px;\n    }\n  }\n\n  &.closed {\n    color: #dc3545;\n  }\n}\n\n.window {\n  .top-row {\n    cursor: pointer;\n  }\n}\n</style>\n"]}]}